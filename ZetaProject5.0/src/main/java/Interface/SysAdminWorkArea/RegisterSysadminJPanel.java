/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.SysAdminWorkArea;

import Business.DB4OUtil.DB4OUtil;
import Business.Ecosystem.EcoSystem;
import Business.People.Person;
import Business.Role.SysAdminRole;
import Business.SystemUser.SystemUser;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kathe
 */
public class RegisterSysadminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RegisterSysadminJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    
    public RegisterSysadminJPanel(JPanel userProcessContainer,EcoSystem system ) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.system=system;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void populateTable(){
        DefaultTableModel model=(DefaultTableModel)sysadminJTable.getModel();
        model.setRowCount(0);
        
        for(UserAccount userAccount:system.getSystemUserDirectory().getUserAccountList()){
            Object[]row=new Object[4];
            row[0]=userAccount.getPerson().getId();
            row[1]=userAccount.getPerson();
            row[2]=userAccount;
            row[3]=userAccount.getPassword();
            model.addRow(row);
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        departureJlabel1 = new javax.swing.JLabel();
        nameJtext = new javax.swing.JTextField();
        departureJlabel = new javax.swing.JLabel();
        usernameJtext = new javax.swing.JTextField();
        arrivalJlabel = new javax.swing.JLabel();
        passwordJtext = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        departureJlabel2 = new javax.swing.JLabel();
        departureJlabel3 = new javax.swing.JLabel();
        arrivalJlabel1 = new javax.swing.JLabel();
        createJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sysadminJTable = new javax.swing.JTable();
        passwordField = new javax.swing.JPasswordField();
        nameTextField = new javax.swing.JTextField();
        usernameTextField = new javax.swing.JTextField();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        showPasswordCheckBox = new javax.swing.JCheckBox();
        backjButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        departureJlabel1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        departureJlabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        departureJlabel1.setText("Name:");

        nameJtext.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        nameJtext.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nameJtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameJtextActionPerformed(evt);
            }
        });

        departureJlabel.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        departureJlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        departureJlabel.setText("User Name:");

        usernameJtext.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        usernameJtext.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        arrivalJlabel.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        arrivalJlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        arrivalJlabel.setText("Password:");

        passwordJtext.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        passwordJtext.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel2.setText("jLabel2");

        setBackground(new java.awt.Color(180, 224, 201));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        departureJlabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        departureJlabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        departureJlabel2.setText("Name:");
        add(departureJlabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 270, 87, -1));

        departureJlabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        departureJlabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        departureJlabel3.setText("User Name:");
        add(departureJlabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 320, -1, -1));

        arrivalJlabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        arrivalJlabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        arrivalJlabel1.setText("Password:");
        add(arrivalJlabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 370, 92, -1));

        createJButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        createJButton.setText("Create");
        createJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createJButtonActionPerformed(evt);
            }
        });
        add(createJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 470, -1, 30));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 28)); // NOI18N
        jLabel1.setText("System User Registration");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, -1, 50));

        sysadminJTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        sysadminJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "User Name", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sysadminJTable.setGridColor(new java.awt.Color(204, 204, 204));
        sysadminJTable.setRowHeight(25);
        sysadminJTable.setSelectionBackground(new java.awt.Color(178, 213, 141));
        sysadminJTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        sysadminJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sysadminJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(sysadminJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 660, 130));

        passwordField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        add(passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 370, 161, 30));

        nameTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, 161, 30));

        usernameTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        add(usernameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 320, 161, 30));

        deleteButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 470, -1, 30));

        updateButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 470, -1, 30));

        showPasswordCheckBox.setBackground(new java.awt.Color(180, 224, 201));
        showPasswordCheckBox.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        showPasswordCheckBox.setText("show password");
        showPasswordCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPasswordCheckBoxActionPerformed(evt);
            }
        });
        add(showPasswordCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 370, -1, -1));

        backjButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        backjButton.setText("<<Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });
        add(backjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\NEU_Study\\INFO 5100 Spring\\Final_Project_Zeta\\Zeta_Images\\register systemadministor1.png")); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 340, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void nameJtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameJtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameJtextActionPerformed

    private void createJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createJButtonActionPerformed
        // TODO add your handling code here:
        String name = nameTextField.getText();
        String username = usernameTextField.getText();
        String password = String.valueOf(passwordField.getText());
        
        if (!system.usernameAvailable(username)) {
            // BU unique
            // TODO: DUIHUAKUANG here.
            JOptionPane.showMessageDialog(null, "Username Has Been Used! ");
            setTextFiledNull("");
            usernameTextField.setEnabled(true);
            return;
        }
        if(name==null||name.trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please input the Name!", "CREATE", JOptionPane.ERROR_MESSAGE);
            return;
        }
         if (username== null ||username.trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please input the Username!", "CREATE", JOptionPane.ERROR_MESSAGE);
            return;
        }
         if (password== null ||password.trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please input the Password!", "CREATE", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
         if(!passwordPatternCorrect()){
            JOptionPane.showMessageDialog(null, "Password must follow the format");
            return;
        } 
         
        Person person=system.getPersonDirectory().createPerson(name);    
        system.getSystemUserDirectory().createUserAccount(username, password, person, new SysAdminRole());
                          
        JOptionPane.showMessageDialog(null, "The information Create successfully!");
        setTextFiledNull("");
        populateTable();
        showPasswordCheckBox.setSelected(false);
        usernameTextField.setEnabled(true);
        passwordField.setEchoChar('*');
        
    }//GEN-LAST:event_createJButtonActionPerformed

    private void showPasswordCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPasswordCheckBoxActionPerformed
        // TODO add your handling code here:
        if(showPasswordCheckBox.isSelected()){
            passwordField.setEchoChar((char)0);
        }else{
            passwordField.setEchoChar('*');
        }
    }//GEN-LAST:event_showPasswordCheckBoxActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = sysadminJTable.getSelectedRow();
       
        if(selectedRow >= 0){
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete?", "Warning", selectionButton);
            if(selectionResult == JOptionPane.YES_OPTION){
                UserAccount userAccount = (UserAccount)sysadminJTable.getValueAt(selectedRow, 2);

                system.getSystemUserDirectory().getUserAccountList().remove(userAccount);
                }
            populateTable();
            setTextFiledNull("");
            usernameTextField.setEnabled(true);
            passwordField.setEchoChar('*');
        }else{
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        } 
        
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = sysadminJTable.getSelectedRow();
       
        if(selectedRow <0)
        {
            JOptionPane.showMessageDialog(null, "Please selet a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        UserAccount userAccount = (UserAccount) sysadminJTable.getValueAt(selectedRow, 2);
        String name = nameTextField.getText();
        //String username = usernameTextField.getText();
        String password = passwordField.getText();
        
            //String name = nameTextField.getText();
          if (name==null||name.trim().isEmpty()) {   
                JOptionPane.showMessageDialog(null, "Name is empty,please input", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            
            
//            if (username==null||username.trim().isEmpty()) {
//                JOptionPane.showMessageDialog(null, "UserName is empty,please input", "Warning", JOptionPane.WARNING_MESSAGE);
//                showPasswordCheckBox.setSelected(false);
//                return;
//            }
            
            
            if (password==null||password.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Password is empty,please input", "Warning", JOptionPane.WARNING_MESSAGE);
                showPasswordCheckBox.setSelected(false);
                return;
            }
            
            if(!passwordPatternCorrect()){
                JOptionPane.showMessageDialog(null, "Password must follow the format");
                showPasswordCheckBox.setSelected(false);
                return;
            }

            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to update this information?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {

            //Check duplicated user name      
             for (UserAccount u :system.getSystemUserDirectory().getUserAccountList() ){
                 if(userAccount.getPassword().equals(password)&&userAccount.getPerson().getName().equals(name)){
                     JOptionPane.showMessageDialog(null, "No information is changed!");
                     showPasswordCheckBox.setSelected(false);
                     setTextFiledNull("");
                     usernameTextField.setEnabled(true);
                     return;
                 }
             }
            
            //update infomation
            userAccount.getPerson().setName(name);
           // userAccount.setUsername(username);
            userAccount.setPassword(password);
             
            populateTable();
            JOptionPane.showMessageDialog(null, "The information is updated successfully!");
            
            setTextFiledNull("");
            showPasswordCheckBox.setSelected(false);
            usernameTextField.setEnabled(true);
            passwordField.setEchoChar('*');
            }
            
      
    }//GEN-LAST:event_updateButtonActionPerformed

    private void sysadminJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sysadminJTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = sysadminJTable.getSelectedRow();
        if(selectedRow >= 0){
            UserAccount ua = (UserAccount) sysadminJTable.getValueAt(selectedRow,2);
            nameTextField.setText(ua.getPerson().getName());
            usernameTextField.setText(ua.getUsername());
            passwordField.setText(ua.getPassword());
            usernameTextField.setEnabled(false);
        }else{
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
        
    }//GEN-LAST:event_sysadminJTableMouseClicked

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
 //       Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);   
        dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_backjButtonActionPerformed

    private boolean passwordPatternCorrect(){
        Pattern p = Pattern.compile("^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,}$");
        Matcher m = p.matcher(passwordField.getText());
        boolean b = m.matches();
        
        return b;
    } 
        
    private void setTextFiledNull(String str){
        nameTextField.setText(str);
        usernameTextField.setText(str);
        passwordField.setText(str);  
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel arrivalJlabel;
    private javax.swing.JLabel arrivalJlabel1;
    private javax.swing.JButton backjButton;
    private javax.swing.JButton createJButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel departureJlabel;
    private javax.swing.JLabel departureJlabel1;
    private javax.swing.JLabel departureJlabel2;
    private javax.swing.JLabel departureJlabel3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJtext;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField passwordJtext;
    private javax.swing.JCheckBox showPasswordCheckBox;
    private javax.swing.JTable sysadminJTable;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField usernameJtext;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
